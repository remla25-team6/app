name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  build-test-publish:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Copy Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cp .github/maven/settings.xml ~/.m2/settings.xml
          sed -i "s|<username>.*</username>|<username>${{github.actor}}</username>|" ~/.m2/settings.xml
          sed -i "s|<password>.*</password>|<password>${{ github.token }}</password>|" ~/.m2/settings.xml

      # --- Step 1: Build ---
      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      # --- Step 2: Test ---
      - name: Run Tests
        env:
          MODEL_URL: https://example.com/api
        run: ./mvnw test

      # --- Step 3: Docker Build and Push ---
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Parse version info from tag
        run: |
          VERSION=${GITHUB_REF:11}
          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          
      # Docker buildx setup   
      - name: Set up QEMU emulation
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        run: |
          IMG="ghcr.io/${{github.repository}}"
          IMG=${IMG@L} # lower case the image`
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag $IMG:${{ env.version }} \
            --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
            --tag $IMG:${{ env.version_major }}.latest \
            --tag $IMG:latest \
            --push \
            .
            
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          generate_release_notes: true
